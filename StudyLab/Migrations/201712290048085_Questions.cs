namespace StudyLab.Migrations
{
    using System.Data.Entity.Migrations;

    public partial class Questions : DbMigration
    {
        public override void Up()
        {
            Sql(@"SET IDENTITY_INSERT [dbo].[Questions] ON
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (1, N'What is JavaScript?', N'JavaScript is a high-level, dynamic, weakly typed, prototype-based, multi-paradigm, and interpreted programming language', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (2, N'What is ReactJS?', N'A JavaScript library for building user interfaces.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (3, N'What is WebAPI?', N'ASP.NET Web API is a framework that simplifies building HTTP services for broader range of clients (including browsers as well as mobile devices) on top of .NET Framework.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (4, N'What is MVC?', N'The Model-View-Controller (MVC) architectural design pattern separates an application into three main components: the model, the view, and the controller. The ASP.NET MVC framework provides an alternative to the ASP.NET Web Forms pattern for creating Web applications. The ASP.NET MVC framework is a lightweight, highly testable presentation framework.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (55, N'What is convention based routing?', N'Convention Routing approaches the routing problem general-case-first; by default, you are given a route that will probably match most if not all of your routes, and are asked to define if there are any more specific routes you would also like to handle.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (56, N'What is convention based routing?', N'Convention Routing approaches the routing problem general-case-first; by default, you are given a route that will probably match most if not all of your routes, and are asked to define if there are any more specific routes you would also like to handle.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (57, N'What is Attribute based routing?', N'Attribute Routing (introduced in MVC 5) is the ability to add routes to the Route Table via attributes so that the route definitions are in close proximity to their corresponding actions.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (58, N'What is Dependency Injection?', N'Dependency injection is basically providing the objects that an object needs (its dependencies) instead of having it construct them itself.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (59, N'What are the benefits of Dependency Injection?', N'It makes it simple to manage dependencies between objects, that in turn, makes it easier to break coherent functionality off into it''s own contract (Interface). Unit testing is much more simple. Maintains loosely coupled code and re-usability.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (60, N'What is a Database Context?', N'A session with the database used for applying changes or creating data.', 2)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (61, N'What is the significance of, and reason for, wrapping the entire content of a JavaScript source file in a function block?', N'This is an increasingly common practice, employed by many popular JavaScript libraries (jQuery, Node.js, etc.). This technique creates a closure around the entire contents of the file which, perhaps most importantly, creates a private namespace and thereby helps avoid potential name clashes between different JavaScript modules and libraries.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (62, N'What is a “closure” in JavaScript?', N'A closure is an inner function that has access to the variables in the outer (enclosing) function’s scope chain.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (63, N'Can you name two programming paradigms important for JavaScript app developers?', N'JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (64, N'What is functional programming?', N'Functional programming produces programs by composing mathematical functions and avoids shared state & mutable data.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (65, N'Name 3 functional programming languages?', N'Lisp, ML, Haskell, Erlang, Clojure, Elm, F Sharp, OCaml.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (66, N'When is classical inheritance an appropriate choice?', N'The answer is never, or almost never. Certainly never more than one level. Multi-level class hierarchies are an anti-pattern.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (67, N'Name 3 functional programming languages?', N'Lisp, ML, Haskell, Erlang, Clojure, Elm, F Sharp, OCaml.', 1)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (68, N'What are the Advantages of Using ASP.NET Web API?', N'It works the HTTP way using standard HTTP verbs like GET, POST, PUT, DELETE, etc. for all CRUD operations. Complete support for routing. Supports Model binding and Validation. Response generated in JSON or XML format.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (69, N'What New Features are Introduced in ASP.NET Web API 2.0?', N'Attribute Routing - External Authentication - CORS (Cross-Origin Resource Sharing) - OWIN (Open Web Interface for .NET) Self Hosting - IHttpActionResult - Web API OData', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (70, N'WCF Vs ASP.NET Web API?', N'Windows Communication Foundation is designed to exchange standard SOAP-based messages using variety of transport protocols like HTTP, TCP, NamedPipes or MSMQ, etc. On the other hand, ASP.NET API is a framework for building non-SOAP based services over HTTP only.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (71, N'MVC Vs ASP.NET Web API?', N'Web API framework is to generate HTTP services that reach more clients by generating data in raw format, for example, plain XML or JSON string. So, ASP.NET Web API creates simple HTTP services that renders raw data. On the other hand, ASP.NET MVC framework is used to develop web applications that generates Views as well as data. ASP.NET MVC facilitates in rendering HTML easy.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (72, N'How to Return View from ASP.NET Web API Method?', N'No, we can''t return view from ASP.NET Web API method.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (73, N'How to Restrict Access to Web API Method to Specific HTTP Verb?', N'Attribute programming plays its role here. We can easily restrict access to an ASP.NET Web API method to be called using a specific HTTP method.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (74, N'Can we use Web API with ASP.NET Web Form?', N'Yes, ASP.NET Web API is bundled with ASP.NET MVC framework but still it can be used with ASP.NET Web Form.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (75, N'What does URL, URI and URN stand for?', N'Universal Resource Locator - Universal Resource Identifier - Universal Resource Name.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (76, N'Name all of the HTTP method verbs.', N'GET - HEAD - POST - PUT - DELETE - CONNECT - OPTIONS - TRACE', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (77, N'Name all the HTTP Status codes.', N'1xx: Informational-It means the request has been received and the process is continuing. 2xx: Success-It means the action was successfully received, understood, and accepted. 3xx: Redirection-It means further action must be taken in order to complete the request. 4xx: Client Error-It means the request contains incorrect syntax or cannot be fulfilled 5xx: Server Error-It means the server failed to fulfill an apparently valid request.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (78, N'What is REST?', N'REST (Representational State Transfer) is an architectural style and a set of principles for designing applications and it dictates to use HTTP for making calls for communications instead of complex mechanism like CORBA, RPC or SOAP.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (79, N'Explain briefly CORS(Cross-Origin Resource Sharing)?', N'CORS (Cross-origin resource sharing) is a technique that allows restricted resources on a web page to be requested from another domain outside the domain of which the first resource was served.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (80, N'Explain briefly OWIN (Open Web Interface for .NET) Self Hosting?', N'OWIN (Open Web Interface for .NET) is an interface for .NET between .NET web applications and web server. It is an open source technology. OWIN aims to decouple the connection between ASP.NET applications and IIS by giving a standard interface.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (81, N'What is ASP.NET Web API OData?', N'The Open Data Protocol (OData) is a data access protocol created for the web. OData gives a consistent procedure to query and manipulates data sets via CRUD operations (Create, Retrieve, Update, and Delete). ASP.NET web API supports each of the v3 and v4 protocol.', 4)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (104, N'What are the features of React? ', N'It uses the virtual DOM instead of the real DOM.
It uses server-side rendering.
It follows uni-directional data flow or data binding.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (105, N'List some of the major advantages of React.', N'It increases the application’s performance
It can be conveniently used on the client as well as server side
Because of JSX, code’s readability increases
React is easy to integrate with other frameworks like Meteor, Angular, etc
Using React, writing UI test cases become extremely easy', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (106, N'What are the limitations of React?', N'React is just a library, not a full-blown framework
Its library is very large and takes time to understand
It can be little difficult for the novice programmers to understand
Coding gets complex as it uses inline templating and JSX', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (107, N'What is JSX?', N'JSX is a shorthand for JavaScript XML. This is a type of file used by React which utilizes the expressiveness of JavaScript along with HTML like template syntax. This makes the HTML file really easy to understand. This file makes applications robust and boosts its performance.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (109, N'Why can’t browsers read JSX?', N'Browsers can only read JavaScript objects but JSX in not a regular JavaScript object. Thus to enable a browser to read JSX, first, we need to transform JSX file into a JavaScript object using JSX transformers like Babel and then pass it to the browser.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (110, N'What do you understand from “In React, everything is a component.”', N'Components are the building blocks of a React application’s UI. These components split up the entire UI into small independent and reusable pieces. Then it renders each of these components independent of each other without affecting the rest of the UI.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (111, N'What do you understand by Virtual DOM? Explain its working.', N'A virtual DOM is a lightweight JavaScript object which originally is just the copy of the real DOM. It is a node tree that lists the elements, their attributes and content as Objects and their properties. React’s render function creates a node tree out of the React components. It then updates this tree in response to the mutations in the data model which is caused by various actions done by the user or by the system.
This Virtual DOM works in three simple steps.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (112, N'Explain the purpose of render() in React.', N'Each React component must have a render() mandatorily. It returns a single React element which is the representation of the native DOM component. If more than one HTML element needs to be rendered, then they must be grouped together inside one enclosing tag such as <form>, <group>,<div> etc. This function must be kept pure i.e., it must return the same result each time it is invoked.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (113, N'What is Props?', N'Props are short hand for Properties in React. They are read-only components which must be kept pure i.e. immutable. They are always passed down from the parent to the child components through out the application. A child component can never send a prop back to the parent component. This help in maintaining the unidirectional data flow and are generally used to render the dynamically generated data.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (114, N'What is a state in React and how is it used?', N'States are the heart of React components. States are the source of data and must be kept as simple as possible. Basically, states are the objects which determine components rendering and behavior. They are mutable unlike the props and create dynamic and interactive components. They are accessed via this.state().', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (115, N'What is arrow function in React? How is it used?', N'Arrow functions are more of brief syntax for writing the function expression. They are also called ‘fat arrow‘ (=>) the functions. These functions allow to bind the context of the components properly since in ES6 auto binding is not available by default. Arrow functions are mostly useful while working with the higher order functions.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (116, N'What is an event in React?', N'In React, events are the triggered reactions to specific actions like mouse hover, mouse click, key press, etc. Handling these events are similar to handling events in DOM elements.

The event argument contains a set of properties, which are specific to an event. Each event type contains its own properties and behavior which can be accessed via its event handler only.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (117, N'What are synthetic events in React?', N'Synthetic events are the objects which act as a cross-browser wrapper around the browser’s native event. They combine the behavior of different browsers into one API. This is done to make sure that the events show consistent properties across different browsers.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (118, N'How do you modularize code in React?', N'We can modularize code by using the export and import properties. They help in writing the components separately in different files.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (119, N'How are forms created in React?', N'React forms are similar to HTML forms. But in React, the state is contained in the state property of the component and is only updated via setState(). Thus the elements can’t directly update their state and their submission is handled by a JavaScript function. This function has full access to the data that is entered by the user into a form.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (120, N'What are Higher Order Components(HOC)?', N'Higher Order Component is an advanced way of reusing the component logic. Basically, it’s a pattern that is derived from React’s compositional nature. HOC are custom components which wraps another component within it. They can accept any dynamically provided child component but they won’t modify or copy any behavior from their input components. You can say that HOC are ‘pure’ components.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (121, N'What are Pure Components?', N'Pure components are the simplest and fastest components which can be written. They can replace any component which only has a render(). These components enhance the simplicity of the code and performance of the application.', 3)
INSERT INTO [dbo].[Questions] ([Id], [QuestionText], [AnswerText], [TypeId]) VALUES (122, N'What is the significance of keys in React?', N'Keys are used for identifying unique Virtual DOM Elements with their corresponding data driving the UI. They help React to optimize the rendering by recycling all the existing elements in the DOM. These keys must be a unique number or string, using which React just reorders the elements instead of re-rendering them. This leads to increase in application’s performance.', 3)
SET IDENTITY_INSERT [dbo].[Questions] OFF
");
        }

        public override void Down()
        {
        }
    }
}
